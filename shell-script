#!/bin/bash

# You could include this file directly in your upload process, or just
# copy the marmaladeUploadFile function to your own script.

marmaladeUploadFile () {
    local username=$1
    local password=$2
    local packageFile=$3
    local marmaladeUrl=${4:-"https://marmalade-repo.org"}
    token=$(curl -f -s -d "name=${username}" \
        -d "password=${password}" \
        $marmaladeUrl/v1/users/login/ | jq -r '.token')
    [ $? -ne 0 ] && {
        echo "Authorization failed: $token"
        exit 1;
    }
    curl -F "name=${username}" -F "token=${token}" \
        -F "package=@${packageFile};filename=$(basename ${packageFile})" \
        $marmaladeUrl/v1/packages
}

marmaladeUploadExample () {
    read -p "username:" username
    read -p "password:" -s password
    local packageFile=$HOME/work/elmarmalade/dummy-package.el
    local marmaladeUrl="http://localhost:8010"
    marmaladeUploadFile $username $password $packageFile $marmaladeUrl
}

# If you source this script this bit will make sure you don't break
# anything.
case $0 in
    marmalade)
        marmaladeUploadExample
        ;;
esac

# End
